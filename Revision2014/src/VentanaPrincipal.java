import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;

import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import es.mgamallo.firma.VentanaDialogoSinFileChooser;

/**
 *
 * @author Manuel
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanelNorteBotones = new javax.swing.JPanel();
        Inicio.jBNHC = new javax.swing.JButton();
        Inicio.jBServicio = new javax.swing.JButton();
        Inicio.jBNombreDoc = new javax.swing.JButton();
        jLNHC = new javax.swing.JLabel();
        jLServicio = new javax.swing.JLabel();
        jLNombreDoc = new javax.swing.JLabel();
        jPanelBotonesAuxiliares = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jBFijarServicio = new javax.swing.JButton();
        jBFijarNombres = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jScrollServicio = new javax.swing.JScrollPane();
        jLServicios = new javax.swing.JList();
        jScrollNombresDoc = new javax.swing.JScrollPane();
        jLNombresDoc = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListHabituales1 = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListHabituales2 = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jBEliminar = new javax.swing.JButton();
        jBApartar = new javax.swing.JButton();
        jBCarpeta = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jBFirmar = new javax.swing.JButton();
        jBGrabar = new javax.swing.JButton();

        setTitle("Panel Principal");
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(720, 680));
        setMinimumSize(new Dimension(720,680));
        setResizable(true);

        jPanelNorteBotones.setBackground(new java.awt.Color(255, 255, 255));
        jPanelNorteBotones.setPreferredSize(new java.awt.Dimension(750, 110));

        Inicio.jBNHC.setFont(new java.awt.Font("Serif", 1, 32)); // NOI18N
        Inicio.jBNHC.setMaximumSize(new java.awt.Dimension(150, 75));
        Inicio.jBNHC.setMinimumSize(new java.awt.Dimension(150, 75));
        Inicio.jBNHC.setPreferredSize(new java.awt.Dimension(150, 75));
        Inicio.jBNHC.setEnabled(false);
        
		Inicio.jBNHC.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int seleccion = JOptionPane.showConfirmDialog(Inicio.jBNHC, "¿Es un separador?");
				if(seleccion == 0){
					Inicio.listaDocumentos[Inicio.numeroPdf].nhc = "Separador";
					Inicio.jBNHC.setText("Separador");
					Inicio.jBNHCp.setText("Separador");
					Inicio.jBServicio.setText("X");
					Inicio.jBServiciop.setText("X");
				}
				new FocalAdobe();
			}
		});

		
        Inicio.jBServicio.setBackground(new Color(233,0,0));
        Inicio.jBServicio.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        //Inicio.jBServicio.setText("jButton2");
        Inicio.jBServicio.setMaximumSize(new java.awt.Dimension(145, 75));
        Inicio.jBServicio.setMinimumSize(new java.awt.Dimension(145, 75));
        Inicio.jBServicio.setPreferredSize(new java.awt.Dimension(145, 75));
		Inicio.jBServicio.setEnabled(false);
		
		Inicio.jBServicio.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				//Icon icono = new ImageIcon(getClass().getResource("/iconos/maletin48x48.png"));
				new FocalAdobe();
				ventanaRenombrarServicios();
			}

		});

		
        Inicio.jBNombreDoc.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        //Inicio.jBNombreDoc.setText("jButton3");
        Inicio.jBNombreDoc.setMaximumSize(new java.awt.Dimension(370, 75));
        Inicio.jBNombreDoc.setMinimumSize(new java.awt.Dimension(370, 75));
        Inicio.jBNombreDoc.setPreferredSize(new java.awt.Dimension(370, 75));
        Inicio.jBNombreDoc.setEnabled(false);
        
		Inicio.jBNombreDoc.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {
				ventanaRenombrarNombres();
				new FocalAdobe();
			}

		});

        jLNHC.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLNHC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLNHC.setText("Selecc. Separador");

        jLServicio.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLServicio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLServicio.setText("Fijar Servicio");

        jLNombreDoc.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLNombreDoc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLNombreDoc.setText("Fijar el nombre del Documento");

		if(Inicio.separadores.get(0) == -1){
			Inicio.jBServicio.setBackground(Color.pink);
			//ventanaRenombrarServicios();
		}

        javax.swing.GroupLayout jPanelNorteBotonesLayout = new javax.swing.GroupLayout(jPanelNorteBotones);
        jPanelNorteBotones.setLayout(jPanelNorteBotonesLayout);
        jPanelNorteBotonesLayout.setHorizontalGroup(
            jPanelNorteBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNorteBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelNorteBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLNHC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Inicio.jBNHC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNorteBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Inicio.jBServicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLServicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNorteBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Inicio.jBNombreDoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLNombreDoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanelNorteBotonesLayout.setVerticalGroup(
            jPanelNorteBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNorteBotonesLayout.createSequentialGroup()
                .addGroup(jPanelNorteBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNHC)
                    .addComponent(jLServicio)
                    .addComponent(jLNombreDoc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNorteBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Inicio.jBNHC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Inicio.jBServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Inicio.jBNombreDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        jButton1.setText("HOSP");
        jButton1.addActionListener(new ActionListener() {
			
   			@Override
   			public void actionPerformed(ActionEvent e) {
   				// TODO Auto-generated method stub
   				
   				jLServicios.setSelectedValue("HOSP", true);
   				jLNombresDoc.setModel(Inicio.excel.getDocServicio("HOSP"));
   				actualizaServicio();
   			}
   		});

        jButton2.setText("CIA");
        jButton2.addActionListener(new ActionListener() {
			
   			@Override
   			public void actionPerformed(ActionEvent e) {
   				// TODO Auto-generated method stub
   				
   				jLServicios.setSelectedValue("CIA", true);
   				jLNombresDoc.setModel(Inicio.excel.getDocServicio("CIA"));
   				actualizaServicio();
   			}
   		});

        jButton3.setText("Des");
        jButton3.addActionListener(new ActionListener() {
			
   			@Override
   			public void actionPerformed(ActionEvent e) {
   				// TODO Auto-generated method stub
   				
   				jLServicios.setSelectedValue("Des", true);
   				actualizaServicio();
   			}
   		});

        jButton4.setText("ANR");
        jButton4.addActionListener(new ActionListener() {
			
   			@Override
   			public void actionPerformed(ActionEvent e) {
   				// TODO Auto-generated method stub
   				
   				jLServicios.setSelectedValue("ANR", true);
   				jLNombresDoc.setModel(Inicio.excel.getDocServicio("ANR"));
   				actualizaServicio();
   			}
   		});

        jButton5.setText("CAR");
        jButton5.addActionListener(new ActionListener() {
			
   			@Override
   			public void actionPerformed(ActionEvent e) {
   				// TODO Auto-generated method stub
   				
   				jLServicios.setSelectedValue("CAR", true);
   				jLNombresDoc.setModel(Inicio.excel.getDocServicio("CAR"));
   				actualizaServicio();
   			}
   		});

        jBFijarServicio.setText("Fija Servicio");
        jBFijarServicio.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(!Inicio.jBServicio.equals("X") && !Inicio.jBServicio.equals("Des")){
					renombraServicios();	
					jLServicios.setSelectedValue(Inicio.jBServicio.getText(), true);
					jLNombresDoc.setModel(Inicio.excel.getDocServicio(Inicio.jBServicio.getText()));
				}

			}
		});


        jBFijarNombres.setText("Fija Nombre");
        jBFijarNombres.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				renombraNombres();
			}
		});

        jCheckBox1.setText("Todos");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotonesAuxiliaresLayout = new javax.swing.GroupLayout(jPanelBotonesAuxiliares);
        jPanelBotonesAuxiliares.setLayout(jPanelBotonesAuxiliaresLayout);
        jPanelBotonesAuxiliaresLayout.setHorizontalGroup(
            jPanelBotonesAuxiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotonesAuxiliaresLayout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBFijarServicio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBFijarNombres)
                .addGap(57, 57, 57)
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanelBotonesAuxiliaresLayout.setVerticalGroup(
            jPanelBotonesAuxiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotonesAuxiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton1)
                .addComponent(jButton2)
                .addComponent(jButton3)
                .addComponent(jButton4)
                .addComponent(jButton5)
                .addComponent(jBFijarServicio)
                .addComponent(jBFijarNombres)
                .addComponent(jCheckBox1))
        );

        jPanel1.setBackground(new java.awt.Color(212, 237, 248));
        
        DefaultListModel dLM = new DefaultListModel();
		dLM.removeAllElements();
		dLM = Inicio.excel.listaServiciosLista;
		dLM.addElement("Des");

        jLServicios.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        
        
  /*      
        jLServicios.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
   */     
        jLServicios.setModel(dLM);
        jLServicios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jLServicios.setSelectedIndex(0);
        jScrollServicio.setViewportView(jLServicios);
        
		jLServicios.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				listaServiciosMouseClicked(evt);
			}
		});

        jLNombresDoc.setBackground(new java.awt.Color(255, 255, 204));
        jLNombresDoc.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
		if(Inicio.documentacionDeUrgencias){
	        jLNombresDoc.setModel(Inicio.excel.getDocServicio("URG"));
		}
		else{
	        jLNombresDoc.setModel(Inicio.excel.getDocServicio(jLServicios.getSelectedValue().toString()));
		}
        jLNombresDoc.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jLNombresDoc.setBackground(new java.awt.Color(255, 255, 204));
        jScrollNombresDoc.setViewportView(jLNombresDoc);
        
        jLNombresDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaNombresDocMouseClicked(evt);
            }
        });
   
        
        jListHabituales1.setBackground(new java.awt.Color(255, 241, 182));
        jListHabituales1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        if(Inicio.documentacionDeUrgencias){
        	jListHabituales1.setModel(Inicio.excel.listaHabitualesUrg);
        }else{
        	jListHabituales1.setModel(Inicio.excel.listaHabituales);
        }
        jListHabituales1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jListHabituales1);
        
        jListHabituales1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
            	listaHabituales1DocMouseClicked(evt);
            }
        });

        
        jListHabituales2.setBackground(new java.awt.Color(255, 241, 182));
        jListHabituales2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jListHabituales2.setModel(Inicio.excel.listaHabituales2);
        jListHabituales2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jListHabituales2);
        
        jListHabituales2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
            	listaHabituales2DocMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollNombresDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jScrollNombresDoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                    .addComponent(jScrollServicio, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jBEliminar.setIcon(new ImageIcon("Iconos/Cubo Basura32x32.png"));
        jBEliminar.setText("Eliminar");
        jBEliminar.setToolTipText("Elimina el documento");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // jBEliminarActionPerformed(evt);
            	
            	Inicio.jBNHC.setText("Eliminar");
				Inicio.jBNHCp.setText("Eliminar");
				Inicio.jBServicio.setText("Eliminar");
				Inicio.jBServiciop.setText("Eliminar");
				Inicio.jBNombreDoc.setText("Eliminar");
				Inicio.jBNombreDocp.setText("Eliminar");
				
				Inicio.jBNHC.setBackground(Color.gray);
				Inicio.jBNHCp.setBackground(Color.gray);
				Inicio.jBServicio.setBackground(Color.gray);
				Inicio.jBServiciop.setBackground(Color.gray);
				Inicio.jBNombreDoc.setBackground(Color.gray);
				Inicio.jBNombreDocp.setBackground(Color.gray);
            	
            }
        });

        jBApartar.setIcon(new ImageIcon("iconos/Clip32x32.png"));
        jBApartar.setText("Apartar");
        jBApartar.setToolTipText("Aparta el documento");
        
        jBApartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBApartarActionPerformed(evt);
            }
        });

        jBCarpeta.setIcon(new ImageIcon("iconos/carpeta 32.png"));
        jBCarpeta.setText("Carpeta");
        jBCarpeta.setToolTipText("Abre la carpeta actual");
        
        jBCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jBCarpetaActionPerformed(evt);
                //jPanel1.requestFocus();
            }
        });

        jButton9.setText("Vacio");
        jButton9.setVisible(false);

        jButton10.setText("Vacio");
        jButton10.setVisible(false);

        jBFirmar.setIcon(new ImageIcon("iconos/drawing_pen 32.png"));
        jBFirmar.setText("Firmar");
        jBFirmar.setEnabled(false);
        jBFirmar.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub

					
					String usuarioUrgencias = "documentacion";
					
					if(Inicio.documentacionDeUrgencias){
						usuarioUrgencias = "urgencias";
					}
					
					String comando = "java -jar FirmaArchivo.jar " + Inicio.usuario 
							+ " " + usuarioUrgencias;
					
					try {
						Runtime.getRuntime().exec(comando);
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					
					
				//	new VentanaDialogoSinFileChooser(Inicio.usuario, Inicio.documentacionDeUrgencias,new File(Inicio.carpetaActualRevisando));

			}
		});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBApartar)
                .addGap(80, 80, 80)
                .addComponent(jBCarpeta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBFirmar))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    //.addComponent(jBEliminar)
                    //.addComponent(jBApartar)
                	.addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBApartar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCarpeta, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9)
                    .addComponent(jButton10)
                    .addComponent(jBFirmar)
                    //.addComponent(jBFirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    )
                .addGap(0, 14, Short.MAX_VALUE))
        );

        jBGrabar.setIcon(new ImageIcon("iconos/accept-32.png"));
        jBGrabar.setText("Registrar");
        jBGrabar.setToolTipText("Graba todos los cambios de la carpeta");
        jBGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // jBGrabarActionPerformed(evt);
            	registraCambiosFinales();
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBotonesAuxiliares, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelNorteBotones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBGrabar)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelNorteBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBotonesAuxiliares, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBGrabar)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74))
        );

        pack();
    }// </editor-fold>                        

    
    protected void jBCarpetaActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
    	String cadena = "explorer.exe " + Inicio.carpetaActualRevisando;
		try {
			Runtime.getRuntime().exec(cadena);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	protected void ventanaRenombrarNombres() {
		// TODO Auto-generated method stub
		Object seleccion = JOptionPane.showInputDialog(
				Inicio.jBServicio, "¿Cambiar el nombre de todos los pdfs hasta el próximo separador?",
				"Fijar nombre en bloque",
				JOptionPane.OK_OPTION,
				null, // icono, // unIcono, // null para icono defecto
				new Object[] { "SI", "NO" },
				"NO"
				);
		if(seleccion.equals("SI")){
			renombraNombres();
		}
	}
    
	private void renombraNombres(){
		for(int i=0;i < Inicio.separadores.size()-1;i++){
			if(Inicio.numeroPdf >= Inicio.separadores.get(i) && Inicio.numeroPdf < Inicio.separadores.get(i+1)){
				for(int j= Inicio.numeroPdf + 1; j < Inicio.separadores.get(i+1); j++){
					if( Inicio.listaDocumentos[j].nombreNormalizado != "X" && Inicio.listaDocumentos[j].nombreNormalizado != Inicio.jBNombreDoc.getText()){
						Inicio.listaDocumentos[j].semaforoAmarilloNombre = true;
					}
					Inicio.listaDocumentos[j].nombreNormalizado = Inicio.jBNombreDoc.getText();
					// Inicio.listaDocumentos[j].revisado = true;
					System.out.println("Modificando pdf numero " + j + " a " + Inicio.listaDocumentos[j].nombreNormalizado);
					
				}
			}
		}
	}

	protected void ventanaRenombrarServicios() {
		// TODO Auto-generated method stub
		
		Object seleccion = JOptionPane.showInputDialog(
				Inicio.jBServicio, "¿Fijar el servicio de todos los pdfs hasta el próximo separador?",
				"Fijar servicio en bloque",
				JOptionPane.OK_OPTION,
				null, // icono, // unIcono, // null para icono defecto
				new Object[] { "SI", "NO" },
				"NO"
				);
		if(seleccion.equals("SI")){
			renombraServicios();	
			jLServicios.setSelectedValue(Inicio.jBServicio.getText(), true);
			jLNombresDoc.setModel(Inicio.excel.getDocServicio(Inicio.jBServicio.getText()));
		}
	}

	protected void listaHabituales2DocMouseClicked(MouseEvent evt) {
		// TODO Auto-generated method stub
		
		Inicio.jBNombreDoc.setText(jListHabituales2.getSelectedValue().toString());
		Inicio.jBNombreDocp.setText(jListHabituales2.getSelectedValue().toString());
		Inicio.jBNombreDoc.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDocp.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDoc.setIcon(null);
		Inicio.jBNombreDocp.setIcon(null);
		jListHabituales1.clearSelection();
		jLNombresDoc.clearSelection();
		
		new FocalAdobe();
	}

    
	protected void listaHabituales1DocMouseClicked(MouseEvent evt) {
		// TODO Auto-generated method stub
		Inicio.jBNombreDoc.setText(jListHabituales1.getSelectedValue()
				.toString());
		Inicio.jBNombreDocp.setText(jListHabituales1.getSelectedValue()
				.toString());
		Inicio.jBNombreDoc
				.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDocp
				.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDoc.setIcon(null);
		Inicio.jBNombreDocp.setIcon(null);
		jLNombresDoc.clearSelection();
		jListHabituales2.clearSelection();
		
		new FocalAdobe();
	}

	protected void listaNombresDocMouseClicked(MouseEvent evt) {
		// TODO Auto-generated method stub
		
		Inicio.jBNombreDoc.setText(jLNombresDoc.getSelectedValue().toString());
		Inicio.jBNombreDocp.setText(jLNombresDoc.getSelectedValue().toString());
		Inicio.jBNombreDoc.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDocp.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDoc.setIcon(null);
		Inicio.jBNombreDocp.setIcon(null);
		jListHabituales1.clearSelection();
		jListHabituales2.clearSelection();
		
		new FocalAdobe();
	}

    
	protected void listaServiciosMouseClicked(MouseEvent evt) {
		// TODO Auto-generated method stub
		
		actualizaServicio();
	}
	
	private void actualizaServicio(){
    	Inicio.jBServicio.setText(jLServicios.getSelectedValue().toString());
		Inicio.jBServiciop.setText(jLServicios.getSelectedValue().toString());
		jLNombresDoc.setModel(Inicio.excel.getDocServicio(Inicio.jBServicio.getText()));
		
		Inicio.jBServicio.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBServiciop.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBServicio.setIcon(null);
		Inicio.jBServiciop.setIcon(null);
		jCheckBox1.setSelected(false);
		
				
		if(Inicio.jBNHC.getText().equals("Separador")){
			Inicio.jBNHC.setBackground(new java.awt.Color(153, 255, 153));
			Inicio.jBNHCp.setBackground(new java.awt.Color(153, 255, 153));
			
			renombraServicios();
		}
		
		new FocalAdobe();
	}
	

	protected void registraCambiosFinales() {
		// TODO Auto-generated method stub
		
		if(Inicio.ventanaComprobacion != null){
			Inicio.ventanaComprobacion.dispose();
		}
		
    	new Acrobat().guardarPagina();
    	revisarPropiedadesDocumento();
    	
    	Inicio.ventanaComprobacion = new VentanaComprobar();
    	if(Inicio.erroresAntesRegistrar){
    		int opcion = JOptionPane.showOptionDialog(null, "Hay errores en la revisión. ¿Quieres continuar registrando o quieres corregir los errores?", "Registrando", 
    				JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null, new Object[] {"Continuar","Corregir"}, "Corregir");
    		if(opcion == 0){
    			Inicio.erroresAntesRegistrar = false;
    			Inicio.ventanaComprobacion.dispose();
    		}
    		else{
    			Inicio.erroresAntesRegistrar = true;
    		}
    	}
 
    	
    	if(!Inicio.erroresAntesRegistrar){
	    	new CerrarTodo().closePdf();
	    	System.out.println("Cerrados los pdfs");
	    	
	    	
	    	
	    	
	    	for(int i=0;i<Inicio.listaDocumentos.length;i++){
	    		//if(Inicio.listaDocumentos[i].revisado){
	    			
	    		/*
	    			if( Inicio.listaDocumentos[i].fisica.peso > 12){
	    				
	    			}
	    		*/
	    		
	    			File nombreAntiguo = new File(Inicio.listaDocumentos[i].rutaArchivo);
	    			
	    			//System.out.println("Ruta apartar:");
	    			//System.out.println(Inicio.listaDocumentos[i].apartaFichero());
	    			
	    			if(Inicio.listaDocumentos[i].nhc.equals("Eliminar")){
	    				if(nombreAntiguo.delete()){
	    					System.out.println("Fichero eliminado");
	    				}else{
	    					System.out.println("Fichero imposible de eliminar");
	    				}
	    			}
	    			else if(Inicio.listaDocumentos[i].nhc.equals("Apartar")){
	    				
	    				int aux = Inicio.listaDocumentos[i].rutaArchivo.lastIndexOf("\\");
	    				String nombrepdf = Inicio.listaDocumentos[i].rutaArchivo.substring(aux);
	    				
	    				String rutaNueva = Inicio.listaDocumentos[i].apartaFichero() + "Apartado por " + Inicio.usuario + ".";
	    				
	    				File carpetaNueva = new File(rutaNueva);
	    				carpetaNueva.mkdirs();
	    				
	    				rutaNueva = rutaNueva + nombrepdf;
	    				System.out.println("Ruta apartado... " + rutaNueva);
	    				
	    				
	    				File nombreNuevo = new File(rutaNueva);
		    			boolean correcto = nombreAntiguo.renameTo(nombreNuevo);
		    			if(correcto){
		    				System.out.println("Renombrado con exito");
		    			}
		    			else{
		    				System.out.println("Error al renombrar");
		    			}
		    			
	    			}
	    			else{
	    				String rutaNueva = Inicio.listaDocumentos[i].registraFichero();
		    			File nombreNuevo = new File(rutaNueva);
		    			boolean correcto = nombreAntiguo.renameTo(nombreNuevo);
		    			if(correcto){
		    				System.out.println("Renombrado con exito");
		    			}
		    			else{
		    				System.out.println("Error al renombrar");
		    			}
	    			}
	    			
	    			
	    			
	    			
	    		//}
	    		/*
	    		String rutaNueva = Inicio.listaDocumentos[i].registraFichero();
	    		
	    			try {
	    				
	    				//	Formatea las paginas en ancho
	    				
	    				if(Inicio.listaDocumentos[i].fisica.tamañoPagina != 1){
	    					PdfReader pdf = new PdfReader(Inicio.listaDocumentos[i].rutaArchivo);
							
	    					PdfStamper stp = new PdfStamper(pdf, new FileOutputStream(rutaNueva));
							PdfWriter writer = stp.getWriter();
							PdfAction pdfAcc;

							pdfAcc = PdfAction.gotoLocalPage(1,new PdfDestination(PdfDestination.FITH), writer);
							
							writer.setOpenAction(pdfAcc);
							stp.close();
							pdf.close();
							
	    				}
 					
					}  catch (FileNotFoundException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (DocumentException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
	    			*/
	    		}
	       	
	    	
	    	Inicio.listaCarpetasRegistradas.add(Inicio.rutaCarpetaEscaneadaUsuario);
	    		    	
	    	Inicio.modelo.removeAllElements();
	    	Inicio.jBNHC.setText("");
	    	Inicio.jBNHCp.setText("");
	    	Inicio.jBServicio.setText("");
	    	Inicio.jBServiciop.setText("");
	    	Inicio.jBNombreDoc.setText("");
	    	Inicio.jBNombreDocp.setText("");

    			
    		}

    	//	    	Eliminar la carpeta de asociados
		/*
		File borrarCarpeta = new File(Inicio.rutaCarpetaEscaneadaUsuario);
		
		File[] listaFicheros = borrarCarpeta.listFiles();
		for(int z=0;z<listaFicheros.length;z++){
			if(listaFicheros[z].delete())
				System.out.println("Fichero borrado en la carpeta escaneado");;
		}
		
		if(borrarCarpeta.delete()){
			System.out.println("El directorio ha sido borrado");
		}else{
			System.out.println("Directorio no borrado");
		}
		*/
 
	}

    
	protected void jBApartarActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
		
		Inicio.jBNHC.setText("Apartar");
		Inicio.jBNHCp.setText("Apartar");
		Inicio.jBServicio.setText("Apartar");
		Inicio.jBServiciop.setText("Apartar");
		Inicio.jBNombreDoc.setText("Apartar");
		Inicio.jBNombreDocp.setText("Apartar");
		
		Inicio.jBNHC.setBackground(Color.gray);
		Inicio.jBNHCp.setBackground(Color.gray);
		Inicio.jBServicio.setBackground(Color.gray);
		Inicio.jBServiciop.setBackground(Color.gray);
		Inicio.jBNombreDoc.setBackground(Color.gray);
		Inicio.jBNombreDocp.setBackground(Color.gray);
	}

	protected void jCheckBox1ActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
		if (jCheckBox1.isSelected()) {
			jLNombresDoc.setModel(Inicio.excel.listaDocumentosDLM);
		} else if (!jCheckBox1.isSelected()) {
			jLNombresDoc.setModel(Inicio.excel.getDocServicio(jLServicios
					.getSelectedValue().toString()));
		}
		
	}

	   void revisarPropiedadesDocumento(){
	    	if(!Inicio.listaDocumentos[Inicio.numeroPdf].nhc.equals(Inicio.jBNHCp.getText())){
	    		System.out.println("Cambiamos el nhc");
	    		Inicio.listaDocumentos[Inicio.numeroPdf].nhc = Inicio.jBNHCp.getText();
	    		Inicio.listaDocumentos[Inicio.numeroPdf].revisado = true;
	    	}
	    	if(!Inicio.listaDocumentos[Inicio.numeroPdf].servicio.equals(Inicio.jBServiciop.getText())){
	    		System.out.println("Cambiamos el servicio");
	    		Inicio.listaDocumentos[Inicio.numeroPdf].servicio = Inicio.jBServiciop.getText();
	    		Inicio.listaDocumentos[Inicio.numeroPdf].revisado = true;
	    	}
	    	if(!Inicio.listaDocumentos[Inicio.numeroPdf].nombreNormalizado.equals(Inicio.jBNombreDocp.getText())){
	    		System.out.println("Cambiamos el nombre del documento");
	    		Inicio.listaDocumentos[Inicio.numeroPdf].nombreNormalizado = Inicio.jBNombreDocp.getText();
	    		Inicio.listaDocumentos[Inicio.numeroPdf].revisado = true;
	    	}
	    	Inicio.listaDocumentos[Inicio.numeroPdf].semaforoAmarilloServicio = false;
	    	Inicio.listaDocumentos[Inicio.numeroPdf].semaforoAmarilloNombre = false;

	    }
	   
		private void renombraServicios(){
			for(int i=0;i < Inicio.separadores.size()-1;i++){
				if(Inicio.numeroPdf >= Inicio.separadores.get(i) && Inicio.numeroPdf < Inicio.separadores.get(i+1)){
					for(int j= Inicio.numeroPdf + 1; j < Inicio.separadores.get(i+1); j++){
						if( Inicio.listaDocumentos[j].servicio != "X" && Inicio.listaDocumentos[j].servicio != Inicio.jBServicio.getText()){
							Inicio.listaDocumentos[j].semaforoAmarilloServicio = true;
						}

							//	Comprobamos si el servicio es anestesia para hacer el cambio anrc - carc
							if(Inicio.jBServicio.getText().equals("ANR")){
								if(Inicio.listaDocumentos[j].nombreNormalizado.equals("EKG")){
									Inicio.listaDocumentos[j].servicio = "CAR";
								}
								else{
									Inicio.listaDocumentos[j].servicio = Inicio.jBServicio.getText();
								}
							}
							
							else if(Inicio.jBServicio.getText().equals("ORL")){
								if(Inicio.listaDocumentos[j].nombreNormalizado.equals("EKG")){
									Inicio.listaDocumentos[j].nombreNormalizado = "Videonistagmografía";
								}
								Inicio.listaDocumentos[j].servicio = Inicio.jBServicio.getText();
							}

							else if(Inicio.jBServicio.getText().equals("CIA")){
								if(Inicio.listaDocumentos[j].fisica.numPaginas > 2){
									Inicio.listaDocumentos[j].nombreNormalizado = "Quirófano";
								}
								Inicio.listaDocumentos[j].servicio = Inicio.jBServicio.getText();
							}
							
							else if(Inicio.jBServicio.getText().equals("HOSP")){
								if(!excepcionesIngresos(j)){
									if(Inicio.listaDocumentos[j].fisica.numPaginas > 2 ){
										Inicio.listaDocumentos[j].nombreNormalizado = "Hospitalización";
									}
									Inicio.listaDocumentos[j].servicio = "HOSP";
								}
								
							}
							else{
								Inicio.listaDocumentos[j].servicio = Inicio.jBServicio.getText();
							}
							
							
							// Inicio.listaDocumentos[j].revisado = true;
							System.out.println("Modificando pdf numero " + j + " a " + Inicio.listaDocumentos[j].servicio);
							
						}
				}
			}
		}	   

		
		private boolean excepcionesIngresos(int numPdf) {
			// TODO Auto-generated method stub
			if(Inicio.listaDocumentos[numPdf].nombreNormalizado.equals("Consentimento informado") ){
				Inicio.listaDocumentos[numPdf].servicio = "X";
				
				/*Inicio.jBServicio.setText("");
				Inicio.jBServiciop.setText("");
				Inicio.jBServicio.setBackground(Color.red);
				Inicio.jBServiciop.setBackground(Color.red);
				*/
				
				System.out.println("Esta es una excepción al ingreso");
				
				return true;
			}
			return false;
		}
		
		


    // Variables declaration - do not modify                     
    private javax.swing.JButton jBApartar;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBFirmar;
    private javax.swing.JButton jBGrabar;
   // private javax.swing.JButton jBNHC;
   // private javax.swing.JButton jBNombreDoc;
   // private javax.swing.JButton jBServicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jBFijarServicio;
    private javax.swing.JButton jBFijarNombres;
    private javax.swing.JButton jBCarpeta;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLNHC;
    private javax.swing.JList jLNombresDoc;
    private javax.swing.JList jLServicios;
    private javax.swing.JLabel jLServicio;
    private javax.swing.JLabel jLNombreDoc;
    private javax.swing.JList jListHabituales1;
    private javax.swing.JList jListHabituales2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelBotonesAuxiliares;
    private javax.swing.JPanel jPanelNorteBotones;
    private javax.swing.JScrollPane jScrollNombresDoc;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollServicio;
    // End of variables declaration                   
}
