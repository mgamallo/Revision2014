import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.WindowConstants;

public class CopyOfInterfazIntroducirNHC extends javax.swing.JDialog {

    /**
     * Creates new form IntroduceNHC
     */
	
	JButton botonOrigen;
	
    public CopyOfInterfazIntroducirNHC(Frame parent, boolean modal, JButton botonOrigen) {
    	// super(parent, modal);
    	this.botonOrigen = botonOrigen;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLNumero = new javax.swing.JLabel();
        jTFnhc = new javax.swing.JTextField();
        jBAceptar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jLIcono = new javax.swing.JLabel();
        
        jBNHCAnterior = new javax.swing.JButton();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        setPreferredSize(new java.awt.Dimension(460, 130));
        setResizable(false);
        setLocationRelativeTo(botonOrigen);

        jLNumero.setText("Introduce el NHC");

        jTFnhc.setBackground(new java.awt.Color(254, 254, 195));
        jTFnhc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTFnhc.addKeyListener(new KeyAdapter(){
           public void keyTyped(KeyEvent e)
           {
              char caracter = e.getKeyChar();

              // Verificar si la tecla pulsada no es un digito
              if(((caracter < '0') || (caracter > '9')) && (caracter != '\b' /*corresponde a BACK_SPACE*/ || (caracter != '\n')))
              	{
            	  	e.consume();  // ignorar el evento de teclado
              	}
              
           }
        });
        //	Si pulsamos enter en el campo de texto
        jTFnhc.addActionListener(new ActionListener(){
        	public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
        		validarNHC(jTFnhc.getText());
				dispose();
			}
        });

        jBAceptar.setText("Aceptar");
        jBAceptar.addActionListener (new ActionListener(){
            public void actionPerformed (ActionEvent e)
            {
            	validarNHC(jTFnhc.getText());
            	dispose();
            }
          });
             

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener (new ActionListener(){
            public void actionPerformed (ActionEvent e)
            {
            	dispose();
            }
          });
        
        //	Boton numero de historia anterior
        if(Inicio.numeroPdf > 0){
            String nhcAnterior = Inicio.listaDocumentos[Inicio.numeroPdf-1].nhc;
            jBNHCAnterior.setText(nhcAnterior);
        }
        else{
        	jBNHCAnterior.setText("X");
        }
        jBNHCAnterior.addActionListener (new ActionListener(){
            public void actionPerformed (ActionEvent e)
            {
            	validarNHC(jBNHCAnterior.getText());
            	dispose();
            }
          });
        

 //       jLIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Pluma64x64.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLIcono)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jBAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLNumero)
                            .addComponent(jTFnhc, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBNHCAnterior))))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLIcono))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLNumero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFnhc, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBNHCAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBCancelar)
                            .addComponent(jBAceptar))))
                .addContainerGap(207, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleParent(this);
  
        pack();
    }// </editor-fold>

    
	private void validarNHC(String jTFnhc) {
		// TODO Auto-generated method stub
		
		int auxM;
		int auxm;
		int aux;
		String numeroFormateado = "";
		
		if(!jTFnhc.equals("")){
			int nhc = Integer.parseInt(jTFnhc);
			if(nhc > 0 && nhc < 2999999){
				
				numeroFormateado = jTFnhc;
				
				/*
				auxM = nhc/1000000;
				auxm = nhc/1000;
				System.out.println("AuxM: " + auxM);
				System.out.println("Auxm: " + auxm);
				
				if(auxM>0){
					numeroFormateado = String.valueOf(auxM) + ".";
					aux = auxm - auxM*1000;
					if(aux <100 && aux >9){
						numeroFormateado += ("0" + String.valueOf(aux) + ".");
					}
					else if(aux < 10 && aux != 0){
						numeroFormateado += ("00" + String.valueOf(aux) + ".");
					}
					else if(aux == 0){
						numeroFormateado += ("000.");
					}
					else{
						numeroFormateado += String.valueOf(aux) + ".";
					}

					aux = nhc - auxm*1000;
					if(aux <100 && aux >9){
						numeroFormateado += ("0" + String.valueOf(aux));
					}
					else if(aux < 10 && aux != 0){
						numeroFormateado += ("00" + String.valueOf(aux));
					}
					else if(aux == 0){
						numeroFormateado += ("000");
					}
					else{
						numeroFormateado += String.valueOf(aux);
					}

				}else if(auxm>0){
					numeroFormateado = String.valueOf(auxm) + ".";
					aux = nhc - auxm*1000;
					if(aux <100 && aux >9){
						numeroFormateado += ("0" + String.valueOf(aux));
					}
					else if(aux < 10 && aux != 0){
						numeroFormateado += ("00" + String.valueOf(aux));
					}
					else if(aux == 0){
						numeroFormateado += ("000");
					}
					else{
						numeroFormateado += String.valueOf(aux);
					}
				}else{
					numeroFormateado = String.valueOf(nhc);
				}
				
				*/
		//		Inicio.jBNHC.setIcon(null);
		//		Inicio.jBNHCp.setIcon(null);	
				Inicio.jBNHC.setText(numeroFormateado);
				Inicio.jBNHCp.setText(numeroFormateado);
				Inicio.jBNHC.setBackground(new java.awt.Color(153,255,153));
				Inicio.jBNHCp.setBackground(new java.awt.Color(153,255,153));

			}
		}

	}
    
    
    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify
    private javax.swing.JButton jBAceptar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JLabel jLIcono;
    private javax.swing.JLabel jLNumero;
    private javax.swing.JTextField jTFnhc;
    
    private javax.swing.JButton jBNHCAnterior;
    // End of variables declaration
}